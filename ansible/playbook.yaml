---
- name: install and configure semiphemeral server
  hosts: app
  remote_user: root

  tasks:
    - name: set hostname
      hostname:
        name: "semiphemeral-{{ deploy_environment }}"

    - name: update all packages
      dnf:
        state: latest
        name: "*"

    - name: ensure dependencies are installed
      dnf:
        state: latest
        name: "{{ packages }}"
      vars:
        packages:
        - dnf-automatic
        - certbot
        - podman
        - podman-compose

    - name: enable dnf-automatic to install updates automatically
      systemd:
        name: dnf-automatic-install.timer
        state: started
        enabled: yes

    - name: ensure semiphemeral directory exists
      file:
        path: /usr/var/semiphemeral
        state: directory

    - name: copy the app
      copy:
        src: "{{ app_tgz }}"
        dest: /tmp/app.tgz

    - name: extract the app
      unarchive:
        remote_src: yes
        src: /tmp/app.tgz
        dest: /usr/var/semiphemeral

    - name: /usr/var/semiphemeral/app/container-compose.yml template
      template:
        src: ../app/container-compose.yml
        dest: /usr/var/semiphemeral/app/container-compose.yml

    - name: /usr/var/semiphemeral/app/web/etc/nginx/conf.d/frontend.conf template
      template:
        src: ../app/web/etc/nginx/conf.d/frontend.conf
        dest: /usr/var/semiphemeral/app/web/etc/nginx/conf.d/frontend.conf

    - name: /usr/var/semiphemeral/app/web/etc/nginx/conf.d/backend.conf template
      template:
        src: ../app/web/etc/nginx/conf.d/backend.conf
        dest: /usr/var/semiphemeral/app/web/etc/nginx/conf.d/backend.conf

    - name: ensure backend volume directory has the right permissions
      file:
        path: /usr/var/semiphemeral/data/backend
        state: directory
        owner: "1000"
        mode: 0700

    - name: ensure db volume data directory has the right permissions
      file:
        path: /usr/var/semiphemeral/data/db
        state: directory
        owner: "999" # postgres user
        mode: 0700

    - name: ensure selinux lets podman use volumes
      shell: |
        chcon -Rt svirt_sandbox_file_t /usr/var/semiphemeral/data/db
        chcon -Rt svirt_sandbox_file_t /usr/var/semiphemeral/data/backend

    # containers must go down for Let's Encrypt renewal to work
    - name: ensure containers are down
      shell: |
        cd /usr/var/semiphemeral/app
        podman-compose down

    - name: ensure we have a Let's Encrypt certificate
      shell: certbot certonly --standalone -n --agree-tos --email micah@micahflee.com -d {{ frontend_domain }},{{ backend_domain }}

    - name: ensure containers are up
      shell: |
        cd /usr/var/semiphemeral/app
        podman-compose pull
        podman-compose build
        podman-compose up -d
