---
- name: set hostname
  hostname:
    name: "db-{{ deploy_environment }}"

- name: ensure dependencies are installed
  apt:
    state: present
    name: "{{ packages }}"
  vars:
    packages:
      - postgresql-client

- name: ensure /db directory exists
  file:
    path: /db
    state: directory

- name: ensure /db/data directory exists
  file:
    path: /db/mnt
    state: directory

- name: ensure /etc/fstab mounts the data volume (and swap)
  template:
    src: "../templates/etc/fstab"
    dest: /etc/fstab

- name: mount everything
  command: mount -a
  args:
    warn: no
  become: true

- name: /root/.pgpass template
  template:
    src: ../templates/root/.pgpass
    dest: /root/.pgpass
    owner: "root"
    mode: 0600

- name: /db/docker-compose.yaml template
  template:
    src: ../templates/db/docker-compose.yaml
    dest: /db/docker-compose.yaml

- name: /db/backup.sh template
  template:
    src: ../templates/db/backup.sh
    dest: /db/backup.sh
    owner: "root"
    mode: 0700

- name: /db/restore.sh template
  template:
    src: ../templates/db/restore.sh
    dest: /db/restore.sh
    owner: "root"
    mode: 0700

- name: ensure containers are up
  docker_compose:
    state: present
    pull: yes
    project_src: /db
