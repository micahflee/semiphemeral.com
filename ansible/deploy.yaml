---
- name: install and configure semiphemeral server
  hosts: app
  remote_user: root

  tasks:
    - name: set hostname
      hostname:
        name: "semiphemeral-{{ deploy_environment }}"

    - name: update all packages
      apt:
        update_cache: yes
        upgrade: dist
        autoremove: yes

    - name: ensure dependencies are installed
      apt:
        name: "{{ packages }}"
      vars:
        packages:
        - unattended-upgrades
        - certbot
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg2
        - software-properties-common

    - name: ensure docker apt key is added
      apt_key:
        id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: ensure docker apt repository is installed
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: ensure docker is installed
      apt:
        force_apt_get: yes
        name: "{{ packages }}"
      vars:
        packages:
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - docker-compose
        - python3-pip

    - name: ensure docker python module is installed
      shell: pip3 install --upgrade pyyaml docker docker-compose

    - name: ensure unattended-upgrades is configured
      shell: |
        echo unattended-upgrades unattended-upgrades/enable_auto_updates boolean true | debconf-set-selections
        dpkg-reconfigure -f noninteractive unattended-upgrades

    - name: ensure unattended-upgrades is enabled
      systemd:
        name: unattended-upgrades
        state: started
        enabled: yes

    - name: ensure semiphemeral directory exists
      file:
        path: /opt/semiphemeral
        state: directory

    - name: ensure backend volume directory has the right permissions
      file:
        path: /opt/semiphemeral/data/backend
        state: directory
        owner: "1000"
        mode: 0700

    - name: ensure db volume data directory has the right permissions
      file:
        path: /opt/semiphemeral/data/db
        state: directory
        owner: "999" # postgres user
        mode: 0700

    - name: ensure web volume data directory has the right permissions
      file:
        path: /opt/semiphemeral/data/web
        state: directory
        owner: "101" # nginx user
        mode: 0700

    - name: ensure we have a Let's Encrypt certificate
      shell: certbot certonly --standalone -n --agree-tos --email micah@micahflee.com -d {{ frontend_domain }},{{ backend_domain }}
