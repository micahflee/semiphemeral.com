version: '3'
services:

  web:
    restart: always
    build: "web"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt/live/{{ frontend_domain }}/fullchain.pem:/etc/nginx/ssl/fullchain.pem
      - /etc/letsencrypt/live/{{ frontend_domain }}/privkey.pem:/etc/nginx/ssl/privkey.pem
      - /opt/semiphemeral/data/web:/var/log/nginx
    networks:
      - default

  frontend:
    restart: always
    build:
      context: "frontend"
      args:
        - FRONTEND_DOMAIN={{ frontend_domain }}
        - BACKEND_DOMAIN={{ backend_domain }}
    environment:
      - FRONTEND_DOMAIN={{ frontend_domain }}
      - BACKEND_DOMAIN={{ backend_domain }}
    expose:
      - "3000"
    depends_on:
      - backend
    networks:
      - default

  backend:
    restart: always
    build: "backend"
    environment:
      - FRONTEND_DOMAIN={{ frontend_domain }}
      - BACKEND_DOMAIN={{ backend_domain }}
      - TWITTER_CONSUMER_TOKEN={{ twitter_consumer_token }}
      - TWITTER_CONSUMER_KEY={{ twitter_consumer_secret }}
      - POSTGRES_PASSWORD={{ postgres_password }}
    expose:
      - "8080"
    volumes:
      - /opt/semiphemeral/data/backend:/var/backend
    depends_on:
      - db
    networks:
      - default

  db:
    restart: always
    image: "postgres:12"
    expose:
      - "5432"
    # so I can ssh forward postgres port locally
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      - POSTGRES_USER=semiphemeral
      - POSTGRES_PASSWORD={{ postgres_password }}
      - POSTGRES_DB=semiphemeral
    volumes:
      - /opt/semiphemeral/data/db:/var/lib/postgresql/data
    networks:
      - default

networks:
  default:
    driver: bridge
